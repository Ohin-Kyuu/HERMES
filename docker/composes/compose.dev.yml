name: hermes
x-common-vars: &var
  tty: true
  stdin_open: true
  privileged: true
  ipc: host
  network_mode: host
  stop_grace_period: 1s

x-common-env: &env
  RMW_IMPLEMENTATION: rmw_cyclonedds_cpp 
  ROS_DOMAIN_ID: $ROS_DOMAIN_ID
  CYCLONEDDS_URI: /tmp/dds.xml

services:
  mavros:
    build:
      context: ../..
      dockerfile: docker/dockerfiles/Dockerfile
      target: mavros
      args:
        USER: mavros
        USER_UID: ${UID}
        USER_GID: ${GID}
    # image: hermes/mavros:dev
    image: ohin112/mavros-ros2:latest
    container_name: mavros
    <<: *var
    group_add: ["dialout","plugdev"]
    devices:
      - ${PX4_DEV:-/dev/ttyTHS0}:${PX4_DEV:-/dev/ttyTHS0}
    environment:
      <<: *env
    volumes:
      - ../../config/dds.xml:/tmp/dds.xml:ro
      - ../../packages/mavros_pkg/mavros:/home/mavros/hermes_ws/src/mavros
      - type: volume
        source: mavros_install
        target: /home/mavros/hermes_ws/install
      - type: volume
        source: mavros_build
        target: /home/mavros/hermes_ws/build
    # entrypoint: ["/ros_entrypoint.sh", "ros2", "launch", "mavros", "px4.launch"]
    command: bash

  slam:
    build:
      context: ../..
      dockerfile: docker/dockerfiles/Dockerfile
      target: slam
      args:
        USER: slam
        USER_UID: ${UID}
        USER_GID: ${GID}
    # image: hermes/slam:dev
    image: ohin112/slam-ros2:latest
    container_name: slam
    <<: *var
    group_add: ["video"]
    environment:
      <<: *env
    volumes:
      - ../../config/dds.xml:/tmp/dds.xml:ro
      - ../../packages/slam_pkg:/home/slam/hermes_ws/src
      - type: volume
        source: slam_install
        target: /home/slam/hermes_ws/install
      - type: volume
        source: slam_build
        target: /home/slam/hermes_ws/build
    command: bash

volumes:
  mavros_install: {}
  mavros_build: {}
  slam_install: {}
  slam_build: {}
name: Buildx & Push Docker image

on:
  push:
    branches: [ main, master ] 
  workflow_dispatch:

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  buildx:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'docker') || contains(github.event.head_commit.message, 'Docker')
    
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (Mavros Image)
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -f docker/dockerfiles/Dockerfile \
          --cache-from type=gha \
          --cache-to type=gha,mode=max \
          --target mavros \
          --build-arg USER=mavros \
          --build-arg USER_UID=$(id -u) \
          --build-arg USER_GID=$(id -g) \
          -t ohin112/mavros-ros2:latest \
          --push .

      - name: Build & Push (SLAM Image)
        run: |
          docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -f docker/dockerfiles/Dockerfile \
          --cache-from type=gha \
          --cache-to type=gha,mode=max \
          --target slam \
          --build-arg USER=slam \
          --build-arg USER_UID=$(id -u) \
          --build-arg USER_GID=$(id -g) \
          -t ohin112/slam-ros2:latest \
          --push .
